name: Frontend PR Quality Checks

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/backend-pr-checks.yaml'
      - 'backend/**'
      - 'admin/**'

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  quality-checks:
    name: Frontend Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Setup Node.jobs
        uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: 'npm'

      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Prettier Check
        run: |
          echo "üé® Checking code formatting..."
          npx prettier --check .
          if [ $? -ne 0 ]; then
            echo ""
            echo "‚ùå Code formatting check failed!"
            echo 'Please run "npm run format" to fix formatting issues.'
            exit 1
          fi
            echo "‚úÖ Code formatting is correct!"

      - name: TypeScript check
        run: |
          echo "üîç Running TypeScript type checking..."
          npm run typecheck
          echo "‚úÖ TypeScript checks passed!"

      - name: ESLint Check
        run: |
          echo "üîß Running ESLint checks..."
          npm run lint
          echo "‚úÖ ESLint checks passed!"

      - name: Build Check
        env:
          HOST: ${{ vars.HOST }}
          AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}
        run: npm run build

      - name: Check `dist` folder
        run: ls -alh dist

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifact
          path: dist

  security-scan:
    name: Security scan
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Npm Audit Check
        run: |
          echo "üîí Running npm security audit..."
          npm audit --audit-level=high
          echo "‚úÖ NPM audit completed!"

      - name: Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Trivy for SARIF Output
        uses: aquasecurity/trivy-action@master
        if: github.event_name == 'push'
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy Scan results
        uses: github/codeql-action/upload-sarif@v3
        if: github.event_name == 'push' && always()
        with:
          sarif_file: 'trivy-results.sarif'
